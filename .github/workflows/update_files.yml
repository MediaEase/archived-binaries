name: Update Files

permissions: write-all

on:
  repository_dispatch:
    types: [update-archives]

jobs:
  update_manifest:
    runs-on: ubuntu-24.04

    env: 
      REPO_PATH: "${{ github.workspace }}/binaries"
    
    steps:
      - name: Checkout Binaries Repository
        uses: actions/checkout@v4
        with:
          path: ${{ env.REPO_PATH }}
          fetch-depth: 0

      - name: Set up Environment
        id: set_up_env
        run: |
          echo "ARTIFACT_ID=$(echo '${{ toJson(github.event.client_payload) }}' | jq -c '.artifact_id')" >> $GITHUB_ENV
          echo "ARTIFACT_URL=$(echo '${{ toJson(github.event.client_payload) }}' | jq -c '.artifact_url')" >> $GITHUB_ENV
          echo "ARCHIVE_MESSAGE=$(echo '${{ toJson(github.event.client_payload) }}' | jq -c '.archive_message')" >> $GITHUB_ENV
          echo "TMP_DIR=$(mktemp -d)" >> $GITHUB_ENV
          echo "environment_setup=true" >> $GITHUB_OUTPUT

      - name: Extract Payload
        id: extract_payload
        if: ${{ steps.set_up_env.outputs.environment_setup == 'true' }}
        run: |
          mkdir -p $TMP_DIR
          echo "Downloading artifacts from URL: $ARTIFACT_URL"
          wget -q -O $TMP_DIR/artifacts.tar.gz $ARTIFACT_URL
          echo "Extracting artifacts..."
          tar -xzf $TMP_DIR/artifacts.tar.gz -C $TMP_DIR
          echo "Artifacts extracted to $TMP_DIR:"
          tree $TMP_DIR
          echo "payload_extracted=true" >> $GITHUB_OUTPUT
      
      - name: Replace Old Binaries
        id: replace_binaries
        if: ${{ steps.extract_payload.outputs.payload_extracted == 'true' }}
        run: |
          package_names=$(ls $TMP_DIR | grep -oP '^[^_]+')
          echo "{\"package_names\": [\"$(echo $package_names | tr ' ' '\", \"')\"]}" >> $GITHUB_ENV
          mv $TMP_DIR/* $REPO_PATH
          echo "binaries_added=true" >> $GITHUB_OUTPUT
      
      - name: Remove Old Packages
        id: remove_old_packages
        if: ${{ steps.replace_binaries.outputs.binaries_added == 'true' }}
        run: |
          set -e
          package_names=$(ls $REPO_PATH | grep -oP '^[^_]+')
          if [ $(echo $package_names | wc -w) -gt 3 ]; then
            oldest_package=$(ls -t $REPO_PATH | grep -oP '^[^_]+.*' | tail -n 1)
            rm $REPO_PATH/$oldest_package
          fi
          echo "package_removed=true" >> $GITHUB_OUTPUT
      
      - name: Commit and Push Changes
        id: commit_and_push
        if: ${{ steps.remove_old_packages.outputs.package_removed == 'true' }}
        uses: EndBug/add-and-commit@v9
        with:
          author_name: "${{ secrets.COMMITTER_NAME }}"
          author_email: "${{ secrets.COMMITTER_EMAIL }}"
          default_author: user_info
          message: "${{ env.ARCHIVE_MESSAGE }}"
          push: true
          pull: "--rebase --autostash"
